{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@apollo/server/src/plugin/landingPage/default/getEmbeddedHTML.ts"],"sourcesContent":["import type {\n  ApolloServerPluginEmbeddedLandingPageLocalDefaultOptions,\n  ApolloServerPluginEmbeddedLandingPageProductionDefaultOptions,\n} from './types';\n\n// This function turns an object into a string and replaces\n// <, >, &, ' with their unicode chars to avoid adding html tags to\n// the landing page html that might be passed from the config.\n// The only place these characters can appear in the output of\n// JSON.stringify is within string literals, where they can equally\n// well appear \\u-escaped. This specifically means that\n// `</script>` won't terminate the script block early.\n// (Perhaps we should have done this instead of the triple-encoding\n// of encodeConfig for the main landing page.)\nfunction getConfigStringForHtml(config: object) {\n  return JSON.stringify(config)\n    .replace('<', '\\\\u003c')\n    .replace('>', '\\\\u003e')\n    .replace('&', '\\\\u0026')\n    .replace(\"'\", '\\\\u0027');\n}\n\nexport const getEmbeddedExplorerHTML = (\n  explorerCdnVersion: string,\n  config: ApolloServerPluginEmbeddedLandingPageProductionDefaultOptions,\n  apolloServerVersion: string,\n  nonce: string,\n) => {\n  interface EmbeddableExplorerOptions {\n    graphRef: string;\n    target: string;\n\n    initialState?: {\n      document?: string;\n      variables?: Record<string, any>;\n      headers?: Record<string, string>;\n      collectionId?: string;\n      operationId?: string;\n      displayOptions: {\n        docsPanelState?: 'open' | 'closed'; // default to 'open',\n        showHeadersAndEnvVars?: boolean; // default to `false`\n        theme?: 'dark' | 'light';\n      };\n    };\n    persistExplorerState?: boolean; // defaults to 'false'\n\n    endpointUrl: string;\n\n    includeCookies?: boolean; // defaults to 'false'\n\n    runTelemetry?: boolean;\n\n    allowDynamicStyles?: boolean; // defaults to 'true'\n  }\n  const productionLandingPageEmbedConfigOrDefault = {\n    displayOptions: {},\n    persistExplorerState: false,\n    runTelemetry: true,\n    ...(typeof config.embed === 'boolean' ? {} : config.embed),\n  };\n  const embeddedExplorerParams: Omit<\n    EmbeddableExplorerOptions,\n    'endpointUrl'\n  > & { runtime: string } = {\n    graphRef: config.graphRef,\n    target: '#embeddableExplorer',\n    initialState: {\n      ...('document' in config || 'headers' in config || 'variables' in config\n        ? {\n            document: config.document,\n            headers: config.headers,\n            variables: config.variables,\n          }\n        : {}),\n      ...('collectionId' in config\n        ? {\n            collectionId: config.collectionId,\n            operationId: config.operationId,\n          }\n        : {}),\n      displayOptions: {\n        ...productionLandingPageEmbedConfigOrDefault.displayOptions,\n      },\n    },\n    persistExplorerState:\n      productionLandingPageEmbedConfigOrDefault.persistExplorerState,\n    includeCookies: config.includeCookies,\n    runtime: apolloServerVersion,\n    runTelemetry: productionLandingPageEmbedConfigOrDefault.runTelemetry,\n    allowDynamicStyles: false, // disabled for CSP - we add the iframe styles ourselves instead\n  };\n\n  return `\n<div class=\"fallback\">\n  <h1>Welcome to Apollo Server</h1>\n  <p>Apollo Explorer cannot be loaded; it appears that you might be offline.</p>\n</div>\n<style nonce=${nonce}>\n  iframe {\n    background-color: white;\n    height: 100%;\n    width: 100%;\n    border: none;\n  }\n  #embeddableExplorer {\n    width: 100vw;\n    height: 100vh;\n    position: absolute;\n    top: 0;\n  }\n</style>\n<div id=\"embeddableExplorer\"></div>\n<script nonce=\"${nonce}\" src=\"https://embeddable-explorer.cdn.apollographql.com/${encodeURIComponent(\n    explorerCdnVersion,\n  )}/embeddable-explorer.umd.production.min.js?runtime=${encodeURIComponent(\n    apolloServerVersion,\n  )}\"></script>\n<script nonce=\"${nonce}\">\n  var endpointUrl = window.location.href;\n  var embeddedExplorerConfig = ${getConfigStringForHtml(\n    embeddedExplorerParams,\n  )};\n  new window.EmbeddedExplorer({\n    ...embeddedExplorerConfig,\n    endpointUrl,\n  });\n</script>\n`;\n};\n\nexport const getEmbeddedSandboxHTML = (\n  sandboxCdnVersion: string,\n  config: ApolloServerPluginEmbeddedLandingPageLocalDefaultOptions,\n  apolloServerVersion: string,\n  nonce: string,\n) => {\n  const localDevelopmentEmbedConfigOrDefault = {\n    runTelemetry: true,\n    endpointIsEditable: false,\n    initialState: {},\n    ...(typeof config.embed === 'boolean' ? {} : config.embed ?? {}),\n  };\n  const embeddedSandboxConfig = {\n    target: '#embeddableSandbox',\n    initialState: {\n      ...('document' in config || 'headers' in config || 'variables' in config\n        ? {\n            document: config.document,\n            variables: config.variables,\n            headers: config.headers,\n          }\n        : {}),\n      ...('collectionId' in config\n        ? {\n            collectionId: config.collectionId,\n            operationId: config.operationId,\n          }\n        : {}),\n      includeCookies: config.includeCookies,\n      ...localDevelopmentEmbedConfigOrDefault.initialState,\n    },\n    hideCookieToggle: false,\n    endpointIsEditable: localDevelopmentEmbedConfigOrDefault.endpointIsEditable,\n    runtime: apolloServerVersion,\n    runTelemetry: localDevelopmentEmbedConfigOrDefault.runTelemetry,\n    allowDynamicStyles: false, // disabled for CSP - we add the iframe styles ourselves instead\n  };\n  return `\n<div class=\"fallback\">\n  <h1>Welcome to Apollo Server</h1>\n  <p>Apollo Sandbox cannot be loaded; it appears that you might be offline.</p>\n</div>\n<style nonce=${nonce}>\n  iframe {\n    background-color: white;\n    height: 100%;\n    width: 100%;\n    border: none;\n  }\n  #embeddableSandbox {\n    width: 100vw;\n    height: 100vh;\n    position: absolute;\n    top: 0;\n  }\n</style>\n<div id=\"embeddableSandbox\"></div>\n<script nonce=\"${nonce}\" src=\"https://embeddable-sandbox.cdn.apollographql.com/${encodeURIComponent(\n    sandboxCdnVersion,\n  )}/embeddable-sandbox.umd.production.min.js?runtime=${encodeURIComponent(\n    apolloServerVersion,\n  )}\"></script>\n<script nonce=\"${nonce}\">\n  var initialEndpoint = window.location.href;\n  var embeddedSandboxConfig = ${getConfigStringForHtml(embeddedSandboxConfig)};\n  new window.EmbeddedSandbox(\n    {\n      ...embeddedSandboxConfig,\n      initialEndpoint,\n    }\n  );\n</script>\n`;\n};\n"],"names":[],"mappings":";;;;AAcA,SAAS,uBAAuB,MAAc;IAC5C,OAAO,KAAK,SAAS,CAAC,QACnB,OAAO,CAAC,KAAK,WACb,OAAO,CAAC,KAAK,WACb,OAAO,CAAC,KAAK,WACb,OAAO,CAAC,KAAK;AAClB;AAEO,MAAM,0BAA0B,CACrC,oBACA,QACA,qBACA;IA4BA,MAAM,4CAA4C;QAChD,gBAAgB,CAAA;QAChB,sBAAsB;QACtB,cAAc;QACd,GAAI,OAAO,OAAO,KAAK,KAAK,YAAY,CAAA,IAAK,OAAO,KAAK;;IAE3D,MAAM,yBAGoB;QACxB,UAAU,OAAO,QAAQ;QACzB,QAAQ;QACR,cAAc;YACZ,GAAI,cAAc,UAAU,aAAa,UAAU,eAAe,SAC9D;gBACE,UAAU,OAAO,QAAQ;gBACzB,SAAS,OAAO,OAAO;gBACvB,WAAW,OAAO,SAAS;gBAE7B,CAAA,CAAE;YACN,GAAI,kBAAkB,SAClB;gBACE,cAAc,OAAO,YAAY;gBACjC,aAAa,OAAO,WAAW;gBAEjC,CAAA,CAAE;YACN,gBAAgB;gBACd,GAAG,0CAA0C,cAAc;;;QAG/D,sBACE,0CAA0C,oBAAoB;QAChE,gBAAgB,OAAO,cAAc;QACrC,SAAS;QACT,cAAc,0CAA0C,YAAY;QACpE,oBAAoB;;IAGtB,OAAO,CAAA;;;;;eAKM,MAAK;;;;;;;;;;;;;;;iBAeH,MAAK,yDAAA,EAA4D,mBAC9E,oBACD,mDAAA,EAAsD,mBACrD,qBACD;iBACc,MAAK;;iCAEW,uBAC7B,wBACD;;;;;;CAMF;AACD;AAEO,MAAM,yBAAyB,CACpC,mBACA,QACA,qBACA;IAEA,MAAM,uCAAuC;QAC3C,cAAc;QACd,oBAAoB;QACpB,cAAc,CAAA;QACd,GAAI,OAAO,OAAO,KAAK,KAAK,YAAY,CAAA,IAAK,OAAO,KAAK,IAAI,CAAA,CAAE;;IAEjE,MAAM,wBAAwB;QAC5B,QAAQ;QACR,cAAc;YACZ,GAAI,cAAc,UAAU,aAAa,UAAU,eAAe,SAC9D;gBACE,UAAU,OAAO,QAAQ;gBACzB,WAAW,OAAO,SAAS;gBAC3B,SAAS,OAAO,OAAO;gBAEzB,CAAA,CAAE;YACN,GAAI,kBAAkB,SAClB;gBACE,cAAc,OAAO,YAAY;gBACjC,aAAa,OAAO,WAAW;gBAEjC,CAAA,CAAE;YACN,gBAAgB,OAAO,cAAc;YACrC,GAAG,qCAAqC,YAAY;;QAEtD,kBAAkB;QAClB,oBAAoB,qCAAqC,kBAAkB;QAC3E,SAAS;QACT,cAAc,qCAAqC,YAAY;QAC/D,oBAAoB;;IAEtB,OAAO,CAAA;;;;;eAKM,MAAK;;;;;;;;;;;;;;;iBAeH,MAAK,wDAAA,EAA2D,mBAC7E,mBACD,kDAAA,EAAqD,mBACpD,qBACD;iBACc,MAAK;;gCAEU,uBAAuB,uBAAsB;;;;;;;;CAQ5E;AACD"}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@apollo/server/src/generated/packageVersion.ts"],"sourcesContent":["export const packageVersion = \"4.10.4\";\n"],"names":[],"mappings":";;;AAAO,MAAM,iBAAiB"}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@apollo/server/src/plugin/landingPage/default/index.ts"],"sourcesContent":["import type {\n  ApolloServerPlugin,\n  BaseContext,\n} from '../../../externalTypes/index.js';\nimport type { ImplicitlyInstallablePlugin } from '../../../ApolloServer.js';\nimport type {\n  ApolloServerPluginLandingPageLocalDefaultOptions,\n  ApolloServerPluginLandingPageProductionDefaultOptions,\n  LandingPageConfig,\n} from './types.js';\nimport {\n  getEmbeddedExplorerHTML,\n  getEmbeddedSandboxHTML,\n} from './getEmbeddedHTML.js';\nimport { packageVersion } from '../../../generated/packageVersion.js';\nimport { createHash } from '@apollo/utils.createhash';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport type {\n  ApolloServerPluginLandingPageLocalDefaultOptions,\n  ApolloServerPluginLandingPageProductionDefaultOptions,\n};\n\nexport function ApolloServerPluginLandingPageLocalDefault(\n  options: ApolloServerPluginLandingPageLocalDefaultOptions = {},\n): ApolloServerPlugin {\n  const { version, __internal_apolloStudioEnv__, ...rest } = {\n    // we default to Sandbox unless embed is specified as false\n    embed: true as const,\n    ...options,\n  };\n  return ApolloServerPluginLandingPageDefault(version, {\n    isProd: false,\n    apolloStudioEnv: __internal_apolloStudioEnv__,\n    ...rest,\n  });\n}\n\nexport function ApolloServerPluginLandingPageProductionDefault(\n  options: ApolloServerPluginLandingPageProductionDefaultOptions = {},\n): ApolloServerPlugin {\n  const { version, __internal_apolloStudioEnv__, ...rest } = options;\n  return ApolloServerPluginLandingPageDefault(version, {\n    isProd: true,\n    apolloStudioEnv: __internal_apolloStudioEnv__,\n    ...rest,\n  });\n}\n\n// A triple encoding! Wow! First we use JSON.stringify to turn our object into a\n// string. Then we encodeURIComponent so we don't have to stress about what\n// would happen if the config contained `</script>`. Finally, we JSON.stringify\n// it again, which in practice just wraps it in a pair of double quotes (since\n// there shouldn't be any backslashes left after encodeURIComponent). The\n// consumer of this needs to decodeURIComponent and then JSON.parse; there's\n// only one JSON.parse because the outermost JSON string is parsed by the JS\n// parser itself.\nfunction encodeConfig(config: LandingPageConfig): string {\n  return JSON.stringify(encodeURIComponent(JSON.stringify(config)));\n}\n\nconst getNonEmbeddedLandingPageHTML = (\n  cdnVersion: string,\n  config: LandingPageConfig,\n  apolloServerVersion: string,\n  nonce: string,\n) => {\n  const encodedConfig = encodeConfig(config);\n\n  return `\n <div class=\"fallback\">\n  <h1>Welcome to Apollo Server</h1>\n  <p>The full landing page cannot be loaded; it appears that you might be offline.</p>\n</div>\n<script nonce=\"${nonce}\">window.landingPage = ${encodedConfig};</script>\n<script nonce=\"${nonce}\" src=\"https://apollo-server-landing-page.cdn.apollographql.com/${encodeURIComponent(\n    cdnVersion,\n  )}/static/js/main.js?runtime=${apolloServerVersion}\"></script>`;\n};\n\nexport const DEFAULT_EMBEDDED_EXPLORER_VERSION = 'v3';\nexport const DEFAULT_EMBEDDED_SANDBOX_VERSION = 'v2';\nexport const DEFAULT_APOLLO_SERVER_LANDING_PAGE_VERSION = '_latest';\n\n// Helper for the two actual plugin functions.\nfunction ApolloServerPluginLandingPageDefault<TContext extends BaseContext>(\n  maybeVersion: string | undefined,\n  config: LandingPageConfig & {\n    isProd: boolean;\n    apolloStudioEnv: 'staging' | 'prod' | undefined;\n  },\n): ImplicitlyInstallablePlugin<TContext> {\n  const explorerVersion = maybeVersion ?? DEFAULT_EMBEDDED_EXPLORER_VERSION;\n  const sandboxVersion = maybeVersion ?? DEFAULT_EMBEDDED_SANDBOX_VERSION;\n  const apolloServerLandingPageVersion =\n    maybeVersion ?? DEFAULT_APOLLO_SERVER_LANDING_PAGE_VERSION;\n  const apolloServerVersion = `@apollo/server@${packageVersion}`;\n\n  const scriptSafeList = [\n    'https://apollo-server-landing-page.cdn.apollographql.com',\n    'https://embeddable-sandbox.cdn.apollographql.com',\n    'https://embeddable-explorer.cdn.apollographql.com',\n  ].join(' ');\n  const styleSafeList = [\n    'https://apollo-server-landing-page.cdn.apollographql.com',\n    'https://embeddable-sandbox.cdn.apollographql.com',\n    'https://embeddable-explorer.cdn.apollographql.com',\n    'https://fonts.googleapis.com',\n  ].join(' ');\n  const iframeSafeList = [\n    'https://explorer.embed.apollographql.com',\n    'https://sandbox.embed.apollographql.com',\n    'https://embed.apollo.local:3000',\n  ].join(' ');\n\n  return {\n    __internal_installed_implicitly__: false,\n    async serverWillStart(server) {\n      if (config.precomputedNonce) {\n        server.logger.warn(\n          \"The `precomputedNonce` landing page configuration option is deprecated. Removing this option is strictly an improvement to Apollo Server's landing page Content Security Policy (CSP) implementation for preventing XSS attacks.\",\n        );\n      }\n      return {\n        async renderLandingPage() {\n          const encodedASLandingPageVersion = encodeURIComponent(\n            apolloServerLandingPageVersion,\n          );\n          async function html() {\n            const nonce =\n              config.precomputedNonce ??\n              createHash('sha256').update(uuidv4()).digest('hex');\n            const scriptCsp = `script-src 'self' 'nonce-${nonce}' ${scriptSafeList}`;\n            const styleCsp = `style-src 'nonce-${nonce}' ${styleSafeList}`;\n            const imageCsp = `img-src https://apollo-server-landing-page.cdn.apollographql.com`;\n            const manifestCsp = `manifest-src https://apollo-server-landing-page.cdn.apollographql.com`;\n            const frameCsp = `frame-src ${iframeSafeList}`;\n            return `\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta http-equiv=\"Content-Security-Policy\" content=\"${scriptCsp}; ${styleCsp}; ${imageCsp}; ${manifestCsp}; ${frameCsp}\" />\n    <link\n      rel=\"icon\"\n      href=\"https://apollo-server-landing-page.cdn.apollographql.com/${encodedASLandingPageVersion}/assets/favicon.png\"\n    />\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\n    <link\n      href=\"https://fonts.googleapis.com/css2?family=Source+Sans+Pro&display=swap\"\n      rel=\"stylesheet\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <meta name=\"description\" content=\"Apollo server landing page\" />\n    <link\n      rel=\"apple-touch-icon\"\n      href=\"https://apollo-server-landing-page.cdn.apollographql.com/${encodedASLandingPageVersion}/assets/favicon.png\"\n    />\n    <link\n      rel=\"manifest\"\n      href=\"https://apollo-server-landing-page.cdn.apollographql.com/${encodedASLandingPageVersion}/manifest.json\"\n    />\n    <title>Apollo Server</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"react-root\">\n      <style nonce=${nonce}>\n        body {\n          margin: 0;\n          overflow-x: hidden;\n          overflow-y: hidden;\n        }\n        .fallback {\n          opacity: 0;\n          animation: fadeIn 1s 1s;\n          animation-iteration-count: 1;\n          animation-fill-mode: forwards;\n          padding: 1em;\n        }\n        @keyframes fadeIn {\n          0% {opacity:0;}\n          100% {opacity:1; }\n        }\n      </style>\n    ${\n      config.embed\n        ? 'graphRef' in config && config.graphRef\n          ? getEmbeddedExplorerHTML(\n              explorerVersion,\n              config,\n              apolloServerVersion,\n              nonce,\n            )\n          : !('graphRef' in config)\n            ? getEmbeddedSandboxHTML(\n                sandboxVersion,\n                config,\n                apolloServerVersion,\n                nonce,\n              )\n            : getNonEmbeddedLandingPageHTML(\n                apolloServerLandingPageVersion,\n                config,\n                apolloServerVersion,\n                nonce,\n              )\n        : getNonEmbeddedLandingPageHTML(\n            apolloServerLandingPageVersion,\n            config,\n            apolloServerVersion,\n            nonce,\n          )\n    }\n    </div>\n  </body>\n</html>\n          `;\n          }\n          return { html };\n        },\n      };\n    },\n  };\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAuBM,SAAU,0CACd,UAA4D,CAAA,CAAE;IAE9D,MAAM,EAAE,OAAO,EAAE,4BAA4B,EAAE,GAAG,MAAM,GAAG;QAEzD,OAAO;QACP,GAAG,OAAO;;IAEZ,OAAO,qCAAqC,SAAS;QACnD,QAAQ;QACR,iBAAiB;QACjB,GAAG,IAAI;;AAEX;AAEM,SAAU,+CACd,UAAiE,CAAA,CAAE;IAEnE,MAAM,EAAE,OAAO,EAAE,4BAA4B,EAAE,GAAG,MAAM,GAAG;IAC3D,OAAO,qCAAqC,SAAS;QACnD,QAAQ;QACR,iBAAiB;QACjB,GAAG,IAAI;;AAEX;AAUA,SAAS,aAAa,MAAyB;IAC7C,OAAO,KAAK,SAAS,CAAC,mBAAmB,KAAK,SAAS,CAAC;AAC1D;AAEA,MAAM,gCAAgC,CACpC,YACA,QACA,qBACA;IAEA,MAAM,gBAAgB,aAAa;IAEnC,OAAO,CAAA;;;;;iBAKQ,MAAK,uBAAA,EAA0B,cAAa;iBAC5C,MAAK,gEAAA,EAAmE,mBACrF,YACD,2BAAA,EAA8B,oBAAmB,WAAA,CAAa;AACjE;AAEO,MAAM,oCAAoC;AAC1C,MAAM,mCAAmC;AACzC,MAAM,6CAA6C;AAG1D,SAAS,qCACP,YAAgC,EAChC,MAGC;IAED,MAAM,kBAAkB,gBAAgB;IACxC,MAAM,iBAAiB,gBAAgB;IACvC,MAAM,iCACJ,gBAAgB;IAClB,MAAM,sBAAsB,CAAA,eAAA,EAAkB,kLAAA,CAAA,iBAAc,CAAA,CAAE;IAE9D,MAAM,iBAAiB;QACrB;QACA;QACA;KACD,CAAC,IAAI,CAAC;IACP,MAAM,gBAAgB;QACpB;QACA;QACA;QACA;KACD,CAAC,IAAI,CAAC;IACP,MAAM,iBAAiB;QACrB;QACA;QACA;KACD,CAAC,IAAI,CAAC;IAEP,OAAO;QACL,mCAAmC;QACnC,MAAM,iBAAgB,MAAM;YAC1B,IAAI,OAAO,gBAAgB,EAAE;gBAC3B,OAAO,MAAM,CAAC,IAAI,CAChB;YAEJ;YACA,OAAO;gBACL,MAAM;oBACJ,MAAM,8BAA8B,mBAClC;oBAEF,eAAe;wBACb,MAAM,QACJ,OAAO,gBAAgB,IACvB,CAAA,GAAA,kKAAA,CAAA,aAAU,AAAV,EAAW,UAAU,MAAM,CAAC,CAAA,GAAA,oLAAA,CAAA,KAAM,AAAN,KAAU,MAAM,CAAC;wBAC/C,MAAM,YAAY,CAAA,yBAAA,EAA4B,MAAK,EAAA,EAAK,eAAc,CAAE;wBACxE,MAAM,WAAW,CAAA,iBAAA,EAAoB,MAAK,EAAA,EAAK,cAAa,CAAE;wBAC9D,MAAM,WAAW,CAAA,gEAAA,CAAkE;wBACnF,MAAM,cAAc,CAAA,qEAAA,CAAuE;wBAC3F,MAAM,WAAW,CAAA,UAAA,EAAa,eAAc,CAAE;wBAC9C,OAAO,CAAA;;;;;0DAKuC,UAAS,EAAA,EAAK,SAAQ,EAAA,EAAK,SAAQ,EAAA,EAAK,YAAW,EAAA,EAAK,SAAQ;;;uEAGnD,4BAA2B;;;;;;;;;;;;uEAY3B,4BAA2B;;;;uEAI3B,4BAA2B;;;;;;;qBAO7E,MAAK;;;;;;;;;;;;;;;;;;MAmBpB,OAAO,KAAK,GACR,cAAc,UAAU,OAAO,QAAQ,GACrC,CAAA,GAAA,0MAAA,CAAA,0BAAuB,AAAvB,EACE,iBACA,QACA,qBACA,SAEF,CAAC,CAAC,cAAc,MAAM,IACpB,CAAA,GAAA,0MAAA,CAAA,yBAAsB,AAAtB,EACE,gBACA,QACA,qBACA,SAEF,8BACE,gCACA,QACA,qBACA,SAEN,8BACE,gCACA,QACA,qBACA,OAER;;;;WAIO;oBACD;oBACA,OAAO;wBAAE;oBAAI;gBACf;;QAEJ;;AAEJ"}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}